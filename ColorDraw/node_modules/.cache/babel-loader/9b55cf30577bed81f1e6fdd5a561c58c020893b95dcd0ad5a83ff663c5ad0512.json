{"ast":null,"code":"var _jsxFileName = \"/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Canvas.js\",\n  _s = $RefreshSig$();\nimport '../CSS/canvas.css';\nimport React from 'react';\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas({\n  strokeColor,\n  lineWidth\n}) {\n  _s();\n  const isPainting = React.useRef(false);\n  const canvasRef = useRef(null);\n  let ctx;\n  const clearCanvas = () => {\n    ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const canvasOffsetX = canvas.offsetLeft;\n    const canvasOffsetY = canvas.offsetTop;\n    canvas.width = window.innerWidth - canvasOffsetX;\n    canvas.height = window.innerHeight - canvasOffsetY;\n    let startX;\n    let startY;\n    function draw(e) {\n      if (!isPainting.current) {\n        return;\n      }\n      ctx.lineWidth = lineWidth;\n      ctx.lineCap = 'round';\n      ctx.strokeStyle = strokeColor;\n      ctx.lineTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n      ctx.stroke();\n    }\n\n    // function handleImage(e){\n    //   var reader = new FileReader();\n    //   reader.onload = function(event){\n    //       var img = new Image();\n    //       img.onload = function(){\n    //           canvas.width = img.width;\n    //           canvas.height = img.height;\n    //           ctx.drawImage(img,0,0);\n    //       }\n    //       img.src = event.target.result;\n    //   }\n    //   reader.readAsDataURL(e.target.files[0]);     \n    // }\n\n    const handleMouseDown = e => {\n      isPainting.current = true;\n      startX = e.clientX - canvasOffsetX;\n      startY = e.clientY - canvasOffsetY;\n      ctx.beginPath();\n      ctx.moveTo(startX, startY);\n    };\n    const handleMouseUp = e => {\n      isPainting.current = false;\n      ctx.closePath();\n    };\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', draw);\n\n    // const handleClick = (e) => {\n    //   if (e.target.id === 'clear') {\n    //       ctx.clearRect(0, 0, canvas.width, canvas.height);\n    //   }\n    //   if (e.target.id === 'save') {\n    //     var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    //     window.location.href=image; //save locally\n    //   }\n    // };\n\n    // const handleChange = (e) => {\n    //   console.log('handleChange called');\n    //   if(e.target.id === 'stroke') {\n    //     console.log('stroke color changed:', e.target.value);\n    //       ctx.strokeStyle = e.target.value;\n    //       setStrokeColor(e.target.value);\n    //   }\n    //   if(e.target.id === 'lineWidth') {\n    //     console.log('line width changed:', e.target.value);\n    //       ctx.lineWidth = e.target.value;\n    //       setLineWidth(e.target.value);\n    //   }\n    //   if (e.target.id === 'file') {\n    //       handleImage(e);\n    //     }\n    // };\n\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', draw);\n    };\n  }, [lineWidth, strokeColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"drawingCanvas\",\n      useRef: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"FtaxnmcbeanrRg3kkiN76z1+CEM=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","strokeColor","lineWidth","_s","isPainting","canvasRef","ctx","clearCanvas","current","getContext","clearRect","width","height","canvas","canvasOffsetX","offsetLeft","canvasOffsetY","offsetTop","window","innerWidth","innerHeight","startX","startY","draw","e","lineCap","strokeStyle","lineTo","clientX","clientY","stroke","handleMouseDown","beginPath","moveTo","handleMouseUp","closePath","addEventListener","removeEventListener","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Canvas.js"],"sourcesContent":["import '../CSS/canvas.css';\nimport React from 'react';\nimport { useRef, useEffect } from 'react';\n\nfunction Canvas({ strokeColor, lineWidth }) {\n  const isPainting = React.useRef(false);\n  const canvasRef = useRef(null);\n  let ctx;\n\n  const clearCanvas = () => {\n    ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  \n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    ctx = canvas.getContext('2d');\n    if (!ctx) return; \n\n    const canvasOffsetX = canvas.offsetLeft;\n    const canvasOffsetY = canvas.offsetTop;\n\n    canvas.width = window.innerWidth - canvasOffsetX;\n    canvas.height = window.innerHeight - canvasOffsetY;\n\n    let startX;\n    let startY;\n\n    function draw(e) {\n      if(!isPainting.current) {\n          return;\n      }\n\n      ctx.lineWidth = lineWidth;\n      ctx.lineCap = 'round';\n      ctx.strokeStyle = strokeColor;\n\n      ctx.lineTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n      ctx.stroke();\n    }\n\n    // function handleImage(e){\n    //   var reader = new FileReader();\n    //   reader.onload = function(event){\n    //       var img = new Image();\n    //       img.onload = function(){\n    //           canvas.width = img.width;\n    //           canvas.height = img.height;\n    //           ctx.drawImage(img,0,0);\n    //       }\n    //       img.src = event.target.result;\n    //   }\n    //   reader.readAsDataURL(e.target.files[0]);     \n    // }\n\n    const handleMouseDown = (e) => {\n      isPainting.current = true;\n      startX = e.clientX - canvasOffsetX;\n      startY = e.clientY - canvasOffsetY;\n      ctx.beginPath();\n      ctx.moveTo(startX, startY);\n    };\n  \n    const handleMouseUp = (e) => {\n      isPainting.current = false;\n      ctx.closePath();\n    };\n\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', draw);\n\n  \n    // const handleClick = (e) => {\n    //   if (e.target.id === 'clear') {\n    //       ctx.clearRect(0, 0, canvas.width, canvas.height);\n    //   }\n    //   if (e.target.id === 'save') {\n    //     var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    //     window.location.href=image; //save locally\n    //   }\n    // };\n  \n    // const handleChange = (e) => {\n    //   console.log('handleChange called');\n    //   if(e.target.id === 'stroke') {\n    //     console.log('stroke color changed:', e.target.value);\n    //       ctx.strokeStyle = e.target.value;\n    //       setStrokeColor(e.target.value);\n    //   }\n    //   if(e.target.id === 'lineWidth') {\n    //     console.log('line width changed:', e.target.value);\n    //       ctx.lineWidth = e.target.value;\n    //       setLineWidth(e.target.value);\n    //   }\n    //   if (e.target.id === 'file') {\n    //       handleImage(e);\n    //     }\n    // };\n\n\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', draw);\n    };\n}, [lineWidth, strokeColor]);\n\n  return (\n    <div>\n        <canvas id=\"drawingCanvas\" useRef={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}