{"ast":null,"code":"var _jsxFileName = \"/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Canvas.js\",\n  _s = $RefreshSig$();\nimport '../CSS/canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [lineWidth, setLineWidth] = useState(5);\n  const [strokeColor, setStrokeColor] = useState('#000000');\n  const isPainting = React.useRef(false);\n  const canvasRef = useRef(null);\n  const toolbarRef = useRef(null);\n  useEffect(() => {\n    const toolbar = toolbarRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const canvasOffsetX = canvas.offsetLeft;\n    const canvasOffsetY = canvas.offsetTop;\n    canvas.width = window.innerWidth - canvasOffsetX;\n    canvas.height = window.innerHeight - canvasOffsetY;\n    let startX;\n    let startY;\n    function draw(e) {\n      if (!isPainting.current) {\n        return;\n      }\n      ctx.lineWidth = lineWidth;\n      ctx.lineCap = 'round';\n      ctx.strokeStyle = strokeColor;\n      if (ctx.lineWidth !== lineWidth || ctx.strokeStyle !== strokeColor) {\n        // If line width or stroke color has changed, update the context and move to the new position\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = strokeColor;\n        ctx.moveTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n      }\n      ctx.lineTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n      ctx.stroke();\n    }\n    function handleImage(e) {\n      var reader = new FileReader();\n      reader.onload = function (event) {\n        var img = new Image();\n        img.onload = function () {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          ctx.drawImage(img, 0, 0);\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(e.target.files[0]);\n    }\n    const handleMouseDown = e => {\n      isPainting.current = true;\n      startX = e.clientX - canvasOffsetX;\n      startY = e.clientY - canvasOffsetY;\n      ctx.beginPath();\n      ctx.moveTo(startX, startY);\n    };\n    const handleMouseUp = e => {\n      isPainting.current = false;\n      ctx.closePath();\n    };\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', draw);\n    const handleClick = e => {\n      if (e.target.id === 'clear') {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      if (e.target.id === 'save') {\n        var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        window.location.href = image; //save locally\n      }\n    };\n    const handleChange = e => {\n      console.log('handleChange called');\n      if (e.target.id === 'stroke') {\n        console.log('stroke color changed:', e.target.value);\n        ctx.strokeStyle = e.target.value;\n        setStrokeColor(e.target.value);\n      }\n      if (e.target.id === 'lineWidth') {\n        console.log('line width changed:', e.target.value);\n        ctx.lineWidth = e.target.value;\n        setLineWidth(e.target.value);\n      }\n      if (e.target.id === 'file') {\n        handleImage(e);\n      }\n    };\n    toolbar.addEventListener('click', handleClick);\n    toolbar.addEventListener('change', handleChange);\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', draw);\n      toolbar.removeEventListener('click', handleClick);\n      toolbar.removeEventListener('change', handleChange);\n    };\n  }, [lineWidth, strokeColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"drawingCanvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"FE4ic35SC4jKEm1xqfCXG9N/J6U=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Canvas","_s","lineWidth","setLineWidth","useState","strokeColor","setStrokeColor","isPainting","React","useRef","canvasRef","toolbarRef","useEffect","toolbar","current","canvas","ctx","getContext","canvasOffsetX","offsetLeft","canvasOffsetY","offsetTop","width","window","innerWidth","height","innerHeight","startX","startY","draw","e","lineCap","strokeStyle","moveTo","clientX","clientY","lineTo","stroke","handleImage","reader","FileReader","onload","event","img","Image","drawImage","src","target","result","readAsDataURL","files","handleMouseDown","beginPath","handleMouseUp","closePath","addEventListener","handleClick","id","clearRect","image","toDataURL","replace","location","href","handleChange","console","log","value","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Canvas.js"],"sourcesContent":["import '../CSS/canvas.css';\n\nfunction Canvas() {\n  const [lineWidth, setLineWidth] = useState(5);\n  const [strokeColor, setStrokeColor] = useState('#000000');\n  const isPainting = React.useRef(false);\n  const canvasRef = useRef(null);\n  const toolbarRef = useRef(null);\n  \n  useEffect(() => {\n    const toolbar = toolbarRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const canvasOffsetX = canvas.offsetLeft;\n    const canvasOffsetY = canvas.offsetTop;\n\n    canvas.width = window.innerWidth - canvasOffsetX;\n    canvas.height = window.innerHeight - canvasOffsetY;\n\n    let startX;\n    let startY;\n\n    function draw(e) {\n      if(!isPainting.current) {\n          return;\n      }\n\n      ctx.lineWidth = lineWidth;\n      ctx.lineCap = 'round';\n      ctx.strokeStyle = strokeColor;\n\n      if (ctx.lineWidth !== lineWidth || ctx.strokeStyle !== strokeColor) {\n        // If line width or stroke color has changed, update the context and move to the new position\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = strokeColor;\n        ctx.moveTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n    }\n\n      ctx.lineTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n      ctx.stroke();\n    }\n\n    function handleImage(e){\n      var reader = new FileReader();\n      reader.onload = function(event){\n          var img = new Image();\n          img.onload = function(){\n              canvas.width = img.width;\n              canvas.height = img.height;\n              ctx.drawImage(img,0,0);\n          }\n          img.src = event.target.result;\n      }\n      reader.readAsDataURL(e.target.files[0]);     \n    }\n\n    const handleMouseDown = (e) => {\n      isPainting.current = true;\n      startX = e.clientX - canvasOffsetX;\n      startY = e.clientY - canvasOffsetY;\n      ctx.beginPath();\n      ctx.moveTo(startX, startY);\n    };\n  \n    const handleMouseUp = (e) => {\n      isPainting.current = false;\n      ctx.closePath();\n    };\n\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', draw);\n\n  \n    const handleClick = (e) => {\n      if (e.target.id === 'clear') {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      if (e.target.id === 'save') {\n        var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        window.location.href=image; //save locally\n      }\n    };\n  \n    const handleChange = (e) => {\n      console.log('handleChange called');\n      if(e.target.id === 'stroke') {\n        console.log('stroke color changed:', e.target.value);\n          ctx.strokeStyle = e.target.value;\n          setStrokeColor(e.target.value);\n      }\n      if(e.target.id === 'lineWidth') {\n        console.log('line width changed:', e.target.value);\n          ctx.lineWidth = e.target.value;\n          setLineWidth(e.target.value);\n      }\n      if (e.target.id === 'file') {\n          handleImage(e);\n        }\n    };\n\n    toolbar.addEventListener('click', handleClick);\n    toolbar.addEventListener('change', handleChange);\n\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', draw);\n      toolbar.removeEventListener('click', handleClick);\n      toolbar.removeEventListener('change', handleChange);\n    };\n}, [lineWidth, strokeColor]);\n\n  return (\n    <div>\n        <canvas id=\"drawingCanvas\"></canvas>\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}