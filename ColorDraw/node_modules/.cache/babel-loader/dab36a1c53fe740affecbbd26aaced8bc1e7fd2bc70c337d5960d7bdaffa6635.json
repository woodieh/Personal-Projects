{"ast":null,"code":"var _jsxFileName = \"/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Toolbar.js\",\n  _s = $RefreshSig$();\nimport '../CSS/toolbar.css';\nimport React from 'react';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Toolbar({\n  strokeColor,\n  lineWidth,\n  clearCanvas,\n  handleImage,\n  saveCanvas\n}) {\n  _s();\n  const toolbarRef = useRef(null);\n\n  // const toolbar = toolbarRef.current;\n\n  // const handleClick = (e) => {\n  //   if (e.target.id === 'clear') {\n  //     clearCanvas();\n  //   }\n  //   if (e.target.id === 'save') {\n  //     saveCanvas();\n  //   }\n  // };\n\n  // const handleChange = (e) => {\n  //   if(e.target.id === 'stroke') {\n  //     strokeColor.current = e.target.value;\n  //   }\n  //   if(e.target.id === 'lineWidth') {\n  //     lineWidth.current = e.target.value;\n  //   }\n  //   if (e.target.id === 'file') {\n  //       handleImage(e);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"toolbar\",\n    ref: toolbarRef,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Draw!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"stroke\",\n      children: \"Stroke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"stroke\",\n      name: \"stroke\",\n      type: \"color\",\n      onChange: e => strokeColor.current = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lineWidth\",\n      children: \"Line Width\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lineWidth\",\n      name: \"lineWidth\",\n      type: \"number\",\n      onChange: e => lineWidth.current = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"clear\",\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"save\",\n      onClick: saveCanvas,\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file\",\n      children: \"Upload File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      name: \"file\",\n      accept: \"image/png, image/jpeg\",\n      onChange: handleImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Toolbar, \"axGy3IAbMiRj4GzjTalTesJwLWM=\");\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Toolbar","strokeColor","lineWidth","clearCanvas","handleImage","saveCanvas","_s","toolbarRef","id","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","type","onChange","e","current","target","value","onClick","accept","_c","$RefreshReg$"],"sources":["/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Toolbar.js"],"sourcesContent":["import '../CSS/toolbar.css';\nimport React from 'react';\nimport { useRef } from 'react';\n\nfunction Toolbar( { strokeColor, lineWidth, clearCanvas, handleImage, saveCanvas } ) {\n  const toolbarRef = useRef(null);\n  \n  // const toolbar = toolbarRef.current;\n\n  // const handleClick = (e) => {\n  //   if (e.target.id === 'clear') {\n  //     clearCanvas();\n  //   }\n  //   if (e.target.id === 'save') {\n  //     saveCanvas();\n  //   }\n  // };\n\n  // const handleChange = (e) => {\n  //   if(e.target.id === 'stroke') {\n  //     strokeColor.current = e.target.value;\n  //   }\n  //   if(e.target.id === 'lineWidth') {\n  //     lineWidth.current = e.target.value;\n  //   }\n  //   if (e.target.id === 'file') {\n  //       handleImage(e);\n  //     }\n  // };\n\n  return (\n    <div id=\"toolbar\" ref={toolbarRef}>\n      <h1>Draw!</h1>\n      <label htmlFor=\"stroke\">Stroke</label>\n      <input id=\"stroke\" name='stroke' type=\"color\" onChange={(e) => strokeColor.current = e.target.value} ></input>\n      <label htmlFor=\"lineWidth\">Line Width</label>\n      <input id=\"lineWidth\" name='lineWidth' type=\"number\" onChange={(e) => lineWidth.current = e.target.value}></input>\n      <button id=\"clear\" onClick={clearCanvas}>Clear</button>\n      <button id=\"save\" onClick={saveCanvas}>Download</button>\n      <label htmlFor=\"file\" >Upload File:</label>\n      <input type=\"file\" id=\"file\" name=\"file\" accept=\"image/png, image/jpeg\" onChange={handleImage} />\n    </div>\n  );\n}\n\nexport default Toolbar;\n"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,OAAOA,CAAE;EAAEC,WAAW;EAAEC,SAAS;EAAEC,WAAW;EAAEC,WAAW;EAAEC;AAAW,CAAC,EAAG;EAAAC,EAAA;EACnF,MAAMC,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAE/B;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEE,OAAA;IAAKS,EAAE,EAAC,SAAS;IAACC,GAAG,EAAEF,UAAW;IAAAG,QAAA,gBAChCX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdf,OAAA;MAAOgB,OAAO,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtCf,OAAA;MAAOS,EAAE,EAAC,QAAQ;MAACQ,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAC,OAAO;MAACC,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACmB,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC;IAAM;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC9Gf,OAAA;MAAOgB,OAAO,EAAC,WAAW;MAAAL,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7Cf,OAAA;MAAOS,EAAE,EAAC,WAAW;MAACQ,IAAI,EAAC,WAAW;MAACC,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAGC,CAAC,IAAKjB,SAAS,CAACkB,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC;IAAM;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClHf,OAAA;MAAQS,EAAE,EAAC,OAAO;MAACe,OAAO,EAAEpB,WAAY;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDf,OAAA;MAAQS,EAAE,EAAC,MAAM;MAACe,OAAO,EAAElB,UAAW;MAAAK,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxDf,OAAA;MAAOgB,OAAO,EAAC,MAAM;MAAAL,QAAA,EAAE;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3Cf,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACT,EAAE,EAAC,MAAM;MAACQ,IAAI,EAAC,MAAM;MAACQ,MAAM,EAAC,uBAAuB;MAACN,QAAQ,EAAEd;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEV;AAACR,EAAA,CAvCQN,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAyChB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}