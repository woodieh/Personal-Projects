{"ast":null,"code":"var _jsxFileName = \"/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Toolbar.js\",\n  _s = $RefreshSig$();\nimport '../CSS/toolbar.css';\nimport React from 'react';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Toolbar({\n  strokeColor,\n  lineWidth,\n  clearCanvas,\n  handleImage,\n  saveCanvas\n}) {\n  _s();\n  const toolbarRef = useRef(null);\n  const toolbar = toolbarRef.current;\n  const handleClick = e => {\n    if (e.target.id === 'clear') {\n      clearCanvas();\n    }\n    if (e.target.id === 'save') {\n      saveCanvas();\n    }\n  };\n\n  // const handleChange = (e) => {\n  //   if(e.target.id === 'stroke') {\n  //     strokeColor.current = e.target.value;\n  //   }\n  //   if(e.target.id === 'lineWidth') {\n  //     lineWidth.current = e.target.value;\n  //   }\n  //   if (e.target.id === 'file') {\n  //       handleImage(e);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toolbar\",\n      ref: toolbarRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Draw!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stroke\",\n        children: \"Stroke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"stroke\",\n        name: \"stroke\",\n        type: \"color\",\n        onChange: e => strokeColor.current = e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lineWidth\",\n        children: \"Line Width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lineWidth\",\n        name: \"lineWidth\",\n        type: \"number\",\n        onChange: e => lineWidth.current = e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        onClick: clearCanvas,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"save\",\n        onClick: saveCanvas,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: \"Upload File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        name: \"file\",\n        accept: \"image/png, image/jpeg\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Toolbar, \"axGy3IAbMiRj4GzjTalTesJwLWM=\");\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Toolbar","strokeColor","lineWidth","clearCanvas","handleImage","saveCanvas","_s","toolbarRef","toolbar","current","handleClick","e","target","id","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","type","onChange","value","onClick","accept","_c","$RefreshReg$"],"sources":["/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Toolbar.js"],"sourcesContent":["import '../CSS/toolbar.css';\nimport React from 'react';\nimport { useRef } from 'react';\n\nfunction Toolbar( { strokeColor, lineWidth, clearCanvas, handleImage, saveCanvas } ) {\n  const toolbarRef = useRef(null);\n  \n  const toolbar = toolbarRef.current;\n\n  const handleClick = (e) => {\n    if (e.target.id === 'clear') {\n      clearCanvas();\n    }\n    if (e.target.id === 'save') {\n      saveCanvas();\n    }\n  };\n\n  // const handleChange = (e) => {\n  //   if(e.target.id === 'stroke') {\n  //     strokeColor.current = e.target.value;\n  //   }\n  //   if(e.target.id === 'lineWidth') {\n  //     lineWidth.current = e.target.value;\n  //   }\n  //   if (e.target.id === 'file') {\n  //       handleImage(e);\n  //     }\n  // };\n\n  return (\n    <>\n      <div id=\"toolbar\" ref={toolbarRef}>\n        <h1>Draw!</h1>\n        <label htmlFor=\"stroke\">Stroke</label>\n        <input id=\"stroke\" name='stroke' type=\"color\" onChange={(e) => strokeColor.current = e.target.value} ></input>\n        <label htmlFor=\"lineWidth\">Line Width</label>\n        <input id=\"lineWidth\" name='lineWidth' type=\"number\" onChange={(e) => lineWidth.current = e.target.value}></input>\n        <button id=\"clear\" onClick={clearCanvas}>Clear</button>\n        <button id=\"save\" onClick={saveCanvas}>Download</button>\n        <label htmlFor=\"file\" >Upload File:</label>\n        <input type=\"file\" id=\"file\" name=\"file\" accept=\"image/png, image/jpeg\" onChange={handleImage} />\n      </div>\n    </>\n  );\n}\n\nexport default Toolbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}