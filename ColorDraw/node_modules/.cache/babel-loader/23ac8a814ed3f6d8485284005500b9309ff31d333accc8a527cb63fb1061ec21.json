{"ast":null,"code":"var _jsxFileName = \"/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Toolbar.js\",\n  _s = $RefreshSig$();\nimport '../CSS/toolbar.css';\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport { Stage, Layer, Line, Text } from 'react-konva';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Toolbar() {\n  _s();\n  const [lineWidth, setWidth] = React.useState('5');\n  // const [lines, setLines] = React.useState([]);\n  const isPainting = React.useRef(false);\n  const myref = useRef(null);\n  const canvas = document.getElementById(\"drawingCanvas\");\n  const toolbar = document.getElementById('toolbar');\n  // const ctx = canvas.getContext(\"2d\"); \n  const ctx = myref.current.getContext(\"2d\");\n  const canvasOffsetX = canvas.offsetLeft;\n  const canvasOffsetY = canvas.offsetTop;\n  canvas.width = window.innerWidth - canvasOffsetX;\n  canvas.height = window.innerHeight - canvasOffsetY;\n\n  // let isPainting = false;\n  // let lineWidth = 5;\n  let startX;\n  let startY;\n  const draw = e => {\n    if (!isPainting.current) {\n      return;\n    }\n    ctx.lineWidth = lineWidth;\n    ctx.lineCap = 'round';\n    ctx.lineTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n    ctx.stroke();\n  };\n\n  // function handleImage(e){\n  //   var reader = new FileReader();\n  //   reader.onload = function(event){\n  //       var img = new Image();\n  //       img.onload = function(){\n  //           canvas.width = img.width;\n  //           canvas.height = img.height;\n  //           ctx.drawImage(img,0,0);\n  //       }\n  //       img.src = event.target.result;\n  //   }\n  //   reader.readAsDataURL(e.target.files[0]);     \n  // }\n\n  // toolbar.addEventListener('click', e => {\n  //   if (e.target.id === 'clear') {\n  //       ctx.clearRect(0, 0, canvas.width, canvas.height);\n  //   }\n  //   if (e.target.id === 'save') {\n  //     var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n  //     window.location.href=image; //save locally\n  //   }\n  // });\n\n  // toolbar.addEventListener('change', e => {\n  //   if(e.target.id === 'stroke') {\n  //       ctx.strokeStyle = e.target.value;\n  //   }\n\n  //   if(e.target.id === 'lineWidth') {\n  //       lineWidth = e.target.value;\n  //   }\n\n  //   if (e.target.id === 'file') {\n  //       handleImage(e);\n  //     }\n  // });\n\n  canvas.addEventListener('mousedown', e => {\n    isPainting.current = true;\n    // const pos = e.target.getStage().getPointerPosition();\n    // setLines([...lines, { tool, points: [pos.x, pos.y] }]);\n\n    startX = e.clientX - canvasOffsetX;\n    startY = e.clientY - canvasOffsetY;\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n  });\n  canvas.addEventListener('mouseup', e => {\n    isPainting.current = false;\n    ctx.closePath();\n  });\n  canvas.addEventListener('mousemove', draw);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Draw!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"stroke\",\n        children: \"Stroke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"stroke\",\n        name: \"stroke\",\n        type: \"color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"lineWidth\",\n        children: \"Line Width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lineWidth\",\n        name: \"lineWidth\",\n        type: \"number\",\n        value: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"save\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"file\",\n        children: \"Upload File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        name: \"file\",\n        accept: \"image/png, image/jpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"drawingCanvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Toolbar, \"0qL8UJJHXbmqjc+F2Pt9YzRIqyQ=\");\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useState","useRef","Stage","Layer","Line","Text","jsxDEV","_jsxDEV","Fragment","_Fragment","Toolbar","_s","lineWidth","setWidth","isPainting","myref","canvas","document","getElementById","toolbar","ctx","current","getContext","canvasOffsetX","offsetLeft","canvasOffsetY","offsetTop","width","window","innerWidth","height","innerHeight","startX","startY","draw","e","lineCap","lineTo","clientX","clientY","stroke","addEventListener","beginPath","moveTo","closePath","children","id","fileName","_jsxFileName","lineNumber","columnNumber","for","name","type","value","accept","_c","$RefreshReg$"],"sources":["/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/Components/Toolbar.js"],"sourcesContent":["import '../CSS/toolbar.css';\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport { Stage, Layer, Line, Text } from 'react-konva';\n\nfunction Toolbar() {\n  const [lineWidth, setWidth] = React.useState('5');\n  // const [lines, setLines] = React.useState([]);\n  const isPainting = React.useRef(false);\n  const myref = useRef(null);\n  const canvas = document.getElementById(\"drawingCanvas\"); \n  const toolbar = document.getElementById('toolbar');\n  // const ctx = canvas.getContext(\"2d\"); \n  const ctx = myref.current.getContext(\"2d\");\n\n  const canvasOffsetX = canvas.offsetLeft;\n  const canvasOffsetY = canvas.offsetTop;\n\n  canvas.width = window.innerWidth - canvasOffsetX;\n  canvas.height = window.innerHeight - canvasOffsetY;\n\n  // let isPainting = false;\n  // let lineWidth = 5;\n  let startX;\n  let startY;\n\n  const draw = (e) => {\n    if(!isPainting.current) {\n        return;\n    }\n\n    ctx.lineWidth = lineWidth;\n    ctx.lineCap = 'round';\n\n    ctx.lineTo(e.clientX - canvasOffsetX, e.clientY - canvasOffsetY);\n    ctx.stroke();\n  }\n\n  // function handleImage(e){\n  //   var reader = new FileReader();\n  //   reader.onload = function(event){\n  //       var img = new Image();\n  //       img.onload = function(){\n  //           canvas.width = img.width;\n  //           canvas.height = img.height;\n  //           ctx.drawImage(img,0,0);\n  //       }\n  //       img.src = event.target.result;\n  //   }\n  //   reader.readAsDataURL(e.target.files[0]);     \n  // }\n\n  // toolbar.addEventListener('click', e => {\n  //   if (e.target.id === 'clear') {\n  //       ctx.clearRect(0, 0, canvas.width, canvas.height);\n  //   }\n  //   if (e.target.id === 'save') {\n  //     var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n  //     window.location.href=image; //save locally\n  //   }\n  // });\n\n  // toolbar.addEventListener('change', e => {\n  //   if(e.target.id === 'stroke') {\n  //       ctx.strokeStyle = e.target.value;\n  //   }\n\n  //   if(e.target.id === 'lineWidth') {\n  //       lineWidth = e.target.value;\n  //   }\n\n  //   if (e.target.id === 'file') {\n  //       handleImage(e);\n  //     }\n  // });\n\n  canvas.addEventListener('mousedown', (e) => {\n    isPainting.current = true;\n    // const pos = e.target.getStage().getPointerPosition();\n    // setLines([...lines, { tool, points: [pos.x, pos.y] }]);\n  \n    startX = e.clientX - canvasOffsetX;\n    startY = e.clientY - canvasOffsetY;\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n  });\n\n  canvas.addEventListener('mouseup', e => {\n    isPainting.current = false;\n    ctx.closePath();\n  });\n\n  canvas.addEventListener('mousemove', draw);\n\n  return (\n    <>\n      <div id=\"toolbar\">\n        <h1>Draw!</h1>\n        <label for=\"stroke\">Stroke</label>\n        <input id=\"stroke\" name='stroke' type=\"color\"></input>\n        <label for=\"lineWidth\">Line Width</label>\n        <input id=\"lineWidth\" name='lineWidth' type=\"number\" value=\"5\"></input>\n        <button id=\"clear\">Clear</button>\n        <button id=\"save\">Download</button>\n        <label for=\"file\">Upload File:</label>\n        <input type=\"file\" id=\"file\" name=\"file\" accept=\"image/png, image/jpeg\" />\n      </div>\n      <div>\n        <canvas id=\"drawingCanvas\"></canvas>\n      </div>\n    </>\n  );\n}\n\nexport default Toolbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}