{"ast":null,"code":"var _jsxFileName = \"/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Toolbar from './Components/Toolbar';\nimport Canvas from './Components/Canvas';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const strokeColor = useRef('#000000');\n  const lineWidth = useRef(5);\n  const canvasRef = useRef(null);\n  let ctx;\n  let canvas;\n  const clearCanvas = () => {\n    ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  const saveCanvas = () => {\n    canvas = canvasRef.current;\n    var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    window.location.href = image; //save locally\n  };\n  function handleImage(e) {\n    console.log('handleimage');\n    canvas = canvasRef.current;\n    ctx = canvasRef.current.getContext('2d');\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        const pointerX = e.clientX - canvas.getBoundingClientRect().left;\n        const pointerY = e.clientY - canvas.getBoundingClientRect().top;\n\n        // Save the current canvas size\n        const currentWidth = canvas.width;\n        const currentHeight = canvas.height;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // Adjust the pointer position relative to the new canvas size\n        const newPointerX = pointerX / currentWidth * img.width;\n        const newPointerY = pointerY / currentHeight * img.height;\n\n        // Update the pointer position to reflect the new canvas size\n        ctx.beginPath();\n        ctx.moveTo(newPointerX, newPointerY);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      strokeColor: strokeColor,\n      lineWidth: lineWidth,\n      clearCanvas: clearCanvas,\n      handleImage: handleImage,\n      saveCanvas: saveCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      strokeColor: strokeColor,\n      lineWidth: lineWidth,\n      canvasRef: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"VlmGtetjstX5JzL2hqzHsmY4OeM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Toolbar","Canvas","useRef","jsxDEV","_jsxDEV","App","_s","strokeColor","lineWidth","canvasRef","ctx","canvas","clearCanvas","current","getContext","clearRect","width","height","saveCanvas","image","toDataURL","replace","window","location","href","handleImage","e","console","log","reader","FileReader","onload","event","img","Image","pointerX","clientX","getBoundingClientRect","left","pointerY","clientY","top","currentWidth","currentHeight","drawImage","newPointerX","newPointerY","beginPath","moveTo","src","target","result","readAsDataURL","files","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Toolbar from './Components/Toolbar';\nimport Canvas from './Components/Canvas';\nimport { useRef } from 'react';\n\nfunction App() {\n  const strokeColor = useRef('#000000');\n  const lineWidth = useRef(5);\n  const canvasRef = useRef(null);\n  let ctx;\n  let canvas;\n\n  const clearCanvas = () => {\n    ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n\n  const saveCanvas = () => {\n    canvas = canvasRef.current;\n    var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    window.location.href=image; //save locally\n  }\n\n  function handleImage(e){\n    console.log('handleimage');\n    canvas = canvasRef.current;\n    ctx = canvasRef.current.getContext('2d');\n    var reader = new FileReader();\n    reader.onload = function(event){\n        var img = new Image();\n        img.onload = function(){\n          const pointerX = e.clientX - canvas.getBoundingClientRect().left;\n          const pointerY = e.clientY - canvas.getBoundingClientRect().top;\n\n          // Save the current canvas size\n          const currentWidth = canvas.width;\n          const currentHeight = canvas.height;\n          \n          canvas.width = img.width;\n          canvas.height = img.height;\n          ctx.drawImage(img, 0, 0);\n\n          // Adjust the pointer position relative to the new canvas size\n          const newPointerX = (pointerX / currentWidth) * img.width;\n          const newPointerY = (pointerY / currentHeight) * img.height;\n\n          // Update the pointer position to reflect the new canvas size\n          ctx.beginPath();\n          ctx.moveTo(newPointerX, newPointerY);\n            }\n            img.src = event.target.result;\n    }\n    \n    reader.readAsDataURL(e.target.files[0]);     \n  }\n\n  return (\n      <section class=\"container\">\n      <Toolbar strokeColor={strokeColor}\n        lineWidth={lineWidth}\n        clearCanvas={clearCanvas}\n        handleImage={handleImage}\n        saveCanvas={saveCanvas}/>\n      <Canvas strokeColor={strokeColor} lineWidth={lineWidth} canvasRef = {canvasRef}/>\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,WAAW,GAAGL,MAAM,CAAC,SAAS,CAAC;EACrC,MAAMM,SAAS,GAAGN,MAAM,CAAC,CAAC,CAAC;EAC3B,MAAMO,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAIQ,GAAG;EACP,IAAIC,MAAM;EAEV,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,GAAG,GAAGD,SAAS,CAACI,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IACxCJ,GAAG,CAACK,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEN,SAAS,CAACI,OAAO,CAACG,KAAK,EAAEP,SAAS,CAACI,OAAO,CAACI,MAAM,CAAC;EACxE,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBP,MAAM,GAAGF,SAAS,CAACI,OAAO;IAC1B,IAAIM,KAAK,GAAGR,MAAM,CAACS,SAAS,CAAC,WAAW,CAAC,CAACC,OAAO,CAAC,WAAW,EAAE,oBAAoB,CAAC;IACpFC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAACL,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED,SAASM,WAAWA,CAACC,CAAC,EAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BjB,MAAM,GAAGF,SAAS,CAACI,OAAO;IAC1BH,GAAG,GAAGD,SAAS,CAACI,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IACxC,IAAIe,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC7BD,MAAM,CAACE,MAAM,GAAG,UAASC,KAAK,EAAC;MAC3B,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACrBD,GAAG,CAACF,MAAM,GAAG,YAAU;QACrB,MAAMI,QAAQ,GAAGT,CAAC,CAACU,OAAO,GAAGzB,MAAM,CAAC0B,qBAAqB,CAAC,CAAC,CAACC,IAAI;QAChE,MAAMC,QAAQ,GAAGb,CAAC,CAACc,OAAO,GAAG7B,MAAM,CAAC0B,qBAAqB,CAAC,CAAC,CAACI,GAAG;;QAE/D;QACA,MAAMC,YAAY,GAAG/B,MAAM,CAACK,KAAK;QACjC,MAAM2B,aAAa,GAAGhC,MAAM,CAACM,MAAM;QAEnCN,MAAM,CAACK,KAAK,GAAGiB,GAAG,CAACjB,KAAK;QACxBL,MAAM,CAACM,MAAM,GAAGgB,GAAG,CAAChB,MAAM;QAC1BP,GAAG,CAACkC,SAAS,CAACX,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;QAExB;QACA,MAAMY,WAAW,GAAIV,QAAQ,GAAGO,YAAY,GAAIT,GAAG,CAACjB,KAAK;QACzD,MAAM8B,WAAW,GAAIP,QAAQ,GAAGI,aAAa,GAAIV,GAAG,CAAChB,MAAM;;QAE3D;QACAP,GAAG,CAACqC,SAAS,CAAC,CAAC;QACfrC,GAAG,CAACsC,MAAM,CAACH,WAAW,EAAEC,WAAW,CAAC;MAClC,CAAC;MACDb,GAAG,CAACgB,GAAG,GAAGjB,KAAK,CAACkB,MAAM,CAACC,MAAM;IACrC,CAAC;IAEDtB,MAAM,CAACuB,aAAa,CAAC1B,CAAC,CAACwB,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC;EAEA,oBACIjD,OAAA;IAASkD,KAAK,EAAC,WAAW;IAAAC,QAAA,gBAC1BnD,OAAA,CAACJ,OAAO;MAACO,WAAW,EAAEA,WAAY;MAChCC,SAAS,EAAEA,SAAU;MACrBI,WAAW,EAAEA,WAAY;MACzBa,WAAW,EAAEA,WAAY;MACzBP,UAAU,EAAEA;IAAW;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3BvD,OAAA,CAACH,MAAM;MAACM,WAAW,EAAEA,WAAY;MAACC,SAAS,EAAEA,SAAU;MAACC,SAAS,EAAIA;IAAU;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEd;AAACrD,EAAA,CA7DQD,GAAG;AAAAuD,EAAA,GAAHvD,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}