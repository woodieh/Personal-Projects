{"ast":null,"code":"var _jsxFileName = \"/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Toolbar from './Components/Toolbar';\nimport Canvas from './Components/Canvas';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [strokeColor, setStrokeColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(5);\n  const canvasRef = useRef(null);\n  let ctx;\n  const clearCanvas = () => {\n    ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  function handleImage(e) {\n    console.log('handleimage');\n    const canvas = canvasRef.current;\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      var img = new Image();\n      img.onload = function () {\n        ctx = canvasRef.current.getContext('2d');\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      strokeColor: strokeColor,\n      setStrokeColor: setStrokeColor,\n      lineWidth: lineWidth,\n      setLineWidth: setLineWidth,\n      clearCanvas: clearCanvas,\n      handleImage: handleImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      strokeColor: strokeColor,\n      lineWidth: lineWidth,\n      canvasRef: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"pOgKU9E3uv6iIR64fgaCXNNrCmE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Toolbar","Canvas","useState","useRef","jsxDEV","_jsxDEV","App","_s","strokeColor","setStrokeColor","lineWidth","setLineWidth","canvasRef","ctx","clearCanvas","current","getContext","clearRect","width","height","handleImage","e","console","log","canvas","reader","FileReader","onload","event","img","Image","drawImage","src","target","result","readAsDataURL","files","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hwoodie/Desktop/Projects/Color Draw/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Toolbar from './Components/Toolbar';\nimport Canvas from './Components/Canvas';\nimport { useState, useRef } from 'react';\n\nfunction App() {\n  const [strokeColor, setStrokeColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(5);\n  const canvasRef = useRef(null);\n  let ctx;\n\n  const clearCanvas = () => {\n    ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n\n  function handleImage(e){\n    console.log('handleimage');\n    const canvas = canvasRef.current;\n    var reader = new FileReader();\n    reader.onload = function(event){\n        var img = new Image();\n        img.onload = function(){\n          ctx = canvasRef.current.getContext('2d');\n          canvas.width = img.width;\n          canvas.height = img.height;\n          ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        }\n        img.src = event.target.result;\n    }\n    \n    reader.readAsDataURL(e.target.files[0]);     \n  }\n\n  return (\n      <section class=\"container\">\n      <Toolbar strokeColor={strokeColor}\n        setStrokeColor={setStrokeColor}\n        lineWidth={lineWidth}\n        setLineWidth={setLineWidth}\n        clearCanvas={clearCanvas}\n        handleImage={handleImage}/>\n      <Canvas strokeColor={strokeColor} lineWidth={lineWidth} canvasRef = {canvasRef}/>\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EACzD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAMU,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAIU,GAAG;EAEP,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBD,GAAG,GAAGD,SAAS,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IACxCH,GAAG,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,SAAS,CAACG,OAAO,CAACG,KAAK,EAAEN,SAAS,CAACG,OAAO,CAACI,MAAM,CAAC;EACxE,CAAC;EAED,SAASC,WAAWA,CAACC,CAAC,EAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,MAAMC,MAAM,GAAGZ,SAAS,CAACG,OAAO;IAChC,IAAIU,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC7BD,MAAM,CAACE,MAAM,GAAG,UAASC,KAAK,EAAC;MAC3B,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACrBD,GAAG,CAACF,MAAM,GAAG,YAAU;QACrBd,GAAG,GAAGD,SAAS,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;QACxCQ,MAAM,CAACN,KAAK,GAAGW,GAAG,CAACX,KAAK;QACxBM,MAAM,CAACL,MAAM,GAAGU,GAAG,CAACV,MAAM;QAC1BN,GAAG,CAACkB,SAAS,CAACF,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEjB,SAAS,CAACG,OAAO,CAACG,KAAK,EAAEN,SAAS,CAACG,OAAO,CAACI,MAAM,CAAC;MAC7E,CAAC;MACDU,GAAG,CAACG,GAAG,GAAGJ,KAAK,CAACK,MAAM,CAACC,MAAM;IACjC,CAAC;IAEDT,MAAM,CAACU,aAAa,CAACd,CAAC,CAACY,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC;EAEA,oBACI/B,OAAA;IAASgC,KAAK,EAAC,WAAW;IAAAC,QAAA,gBAC1BjC,OAAA,CAACL,OAAO;MAACQ,WAAW,EAAEA,WAAY;MAChCC,cAAc,EAAEA,cAAe;MAC/BC,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BG,WAAW,EAAEA,WAAY;MACzBM,WAAW,EAAEA;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7BrC,OAAA,CAACJ,MAAM;MAACO,WAAW,EAAEA,WAAY;MAACE,SAAS,EAAEA,SAAU;MAACE,SAAS,EAAIA;IAAU;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEd;AAACnC,EAAA,CAxCQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}